#arch_info.mfu - mftk - GPLV3, copyleft 2019 Raphael Outhier;

#----------------------------------------------------------- prerequisites check

#If the target was not provided, fail;
$(eval $(call mftk.utility.entry,arch_info,target))

#---------------------------------------------------------------- variables init

#All variables updated by the script are reset;
MEM_FLASH_ORIGIN :=
MEM_FLASH_SIZE :=
MEM_RAM_ORIGIN :=
MEM_RAM_SIZE :=
PROC_IBUS_SIZE :=
PROC_DBUS_SIZE :=
PROC_ENDIANNESS :=

#--------------------------------------------------------------- local variables

#Our curent directory;
arch_info.cdir := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))

#--------------------------------------------------------------- cross make call

#Cross make is used, with the arch environment;
$(eval $(call mftk.utility.define,cross_make,env,arch))

#Provide the external directory;
$(eval $(call mftk.utility.define,cross_make,ext_dir,$(arch_info.cdir)))

#Transfer the target;
$(eval $(call mftk.utility.define,cross_make,target,$(arch_info.target)))

#Call cross make;
$(eval $(call mftk.utility.execute,cross_make))

#---------------------------------------------------------- arch variables check

#Memory related variables must have been defined;

ifndef MEM_FLASH_ORIGIN
$(error makefiles did not define the flash origin)
endif

ifndef MEM_FLASH_SIZE
$(error makefiles did not define the flash size)
endif

ifndef MEM_RAM_ORIGIN
$(error makefiles did not define the ram origin)
endif

ifndef MEM_RAM_SIZE
$(error makefiles did not define the ram size)
endif

#Proc related variables must have been defined;

ifndef PROC_IBUS_SIZE
$(error makefiles did not define the instruction bus size)
endif

ifndef PROC_DBUS_SIZE
$(error makefiles did not define the data bus size)
endif

ifndef PROC_ENDIANNESS
$(error makefiles did not define the processor endianness)
endif
